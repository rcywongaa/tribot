<?xml version='1.0' ?>
<%
  # erb generation
  # https://bitbucket.org/osrf/gazebo_models/src/b237ea45262f51ff8d72aaa96ef19f1288723c42/cart_rigid_suspension/model.rsdf?at=default&fileviewer=file-view-default

  require_relative 'constants'
%>
<!-- THIS FILE IS GENERATED FROM unibot.rsdf -->

<sdf version='1.6'>
  <model name='Unibot'>

    <link name='wheel'>
      <pose>0 0 0 0 0 0</pose>
      <inertial>
        <mass><%= WHEEL_MASS %></mass>
        <inertia>
          <ixx><%= 1.0/12.0*WHEEL_MASS*(3.0*WHEEL_RADIUS**2 + WHEEL_THICKNESS**2) %></ixx>
          <iyy><%= 1.0/2.0 * WHEEL_MASS * WHEEL_RADIUS**2 %></iyy>
          <izz><%= 1.0/12.0*WHEEL_MASS*(3.0*WHEEL_RADIUS**2 + WHEEL_THICKNESS**2) %></izz>
          <ixy>0</ixy><ixz>0</ixz><iyz>0</iyz>
        </inertia>
      </inertial>

      <visual name='vis_wheel'>
        <pose>0 0 0 <%= PI/2.0 %> 0 0</pose>
        <geometry>
          <cylinder>
            <radius><%= WHEEL_RADIUS %></radius>
            <length><%= WHEEL_THICKNESS %></length>
          </cylinder>
        </geometry>
      </visual>
      <collision name='col_wheel'>
        <pose>0 0 0 <%= PI/2.0 %> 0 0</pose>
        <geometry>
          <cylinder>
            <radius><%= WHEEL_RADIUS %></radius>
            <length><%= WHEEL_THICKNESS %></length>
          </cylinder>
        </geometry>
      </collision>
    </link>

    <link name='link1'>
      <pose>0 0 0 0 0 0</pose>
      <inertial>
        <mass><%= LINK1_MASS %></mass>
        <inertia>
          <ixx><%= 1.0/12.0*LINK1_MASS*LINK1_LENGTH**2 %></ixx>
          <iyy><%= 1.0/12.0*LINK1_MASS*LINK1_LENGTH**2 %></iyy>
          <izz>1.0e-20</izz>
          <ixy>0</ixy><ixz>0</ixz><iyz>0</iyz>
        </inertia>
      </inertial>
      <visual name='link1_vis'>
        <pose>0 0 <%= LINK1_LENGTH/2.0%> 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius><%= LINK1_RADIUS %></radius>
            <length><%= LINK1_LENGTH %></length>
          </cylinder>
        </geometry>
      </visual>
      <collision name='link1_col'>
        <pose>0 0 <%= LINK1_LENGTH/2.0%> 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius><%= LINK1_RADIUS %></radius>
            <length><%= LINK1_LENGTH %></length>
          </cylinder>
        </geometry>
      </collision>
    </link>

    <link name='link2'>
      <pose>0 0 <%= LINK1_LENGTH %> 0 0 0</pose>
      <inertial>
        <pose>0 0 <%= -LINK2_LENGTH/2.0 %> 0 0 0</pose>
        <mass><%= LINK2_MASS %></mass>
        <inertia>
          <ixx><%= 1.0/12.0*LINK2_MASS*LINK2_LENGTH**2 %></ixx>
          <iyy><%= 1.0/12.0*LINK2_MASS*LINK2_LENGTH**2 %></iyy>
          <izz>1.0e-20</izz>
          <ixy>0</ixy><ixz>0</ixz><iyz>0</iyz>
        </inertia>
      </inertial>
      <visual name='link2_vis'>
        <pose>0 0 <%= -LINK2_LENGTH/2.0 %> 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius><%= LINK2_RADIUS %></radius>
            <length><%= LINK2_LENGTH %></length>
          </cylinder>
        </geometry>
      </visual>
    </link>

    <link name='load'>
      <pose>0 0 <%= LINK1_LENGTH - LINK2_LENGTH %> 0 0 0</pose>
      <inertial>
        <!-- A point mass has zero rotational inertia.
             We must specify small values since otherwise sdformat throws an
             exception. -->
        <inertia>
          <ixx>1.0e-20</ixx><iyy>1.0e-20</iyy><izz>1.0e-20</izz>
          <ixy>0</ixy><ixz>0</ixz><iyz>0</iyz>
        </inertia>
        <mass><%= LOAD_MASS %></mass>
      </inertial>
      <visual name='load_vis'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <sphere>
            <radius><%= LOAD_RADIUS %></radius>
          </sphere>
        </geometry>
      </visual>
    </link>

    <joint name='alpha' type='revolute'>
      <parent>link1</parent>
      <child>link2</child>
      <pose>0 0 0 0 0 0</pose>
      <axis>
        <xyz>1.0 0 0</xyz>
      </axis>
    </joint>

    <joint name='load_attach' type='fixed'>
      <parent>link2</parent>
      <child>load</child>
      <pose>0 0 0 0 0 0</pose>
    </joint>

    <joint name='beta' type='revolute'>
      <!--With respect to child frame-->
      <pose>0 0 0 0 0 0</pose>
      <parent>link1</parent>
      <child>wheel</child>
      <axis>
        <xyz>0 1.0 0</xyz>
        <!--<use_parent_model_frame>true</use_parent_model_frame>-->
      </axis>
    </joint>

  </model>
</sdf>

