<?xml version='1.0' ?>
<%
  # erb generation
  # https://bitbucket.org/osrf/gazebo_models/src/b237ea45262f51ff8d72aaa96ef19f1288723c42/cart_rigid_suspension/model.rsdf?at=default&fileviewer=file-view-default

  # Constants
  PI = 3.14159

  # Must be consistent with mip_util.cpp

  # Wheel
  wheel_mass = 2.0
  wheel_radius = 0.2
  wheel_thickness = 0.2

  # Pole
  pole_mass = 8.0
  pole_length = 1.0
  pole_radius = 0.1

%>
<!-- THIS FILE IS GENERATED FROM segway.rsdf -->

<sdf version='1.6'>
  <model name='mip'>
    <link name='wheel'>
      <pose>0 0 0 0 0 0</pose>
      <inertial>
        <mass><%= wheel_mass %></mass>
        <inertia>
          <ixx><%= 1.0/12.0*wheel_mass*(3.0*wheel_radius**2 + wheel_thickness**2) %></ixx>
          <iyy><%= 1.0/2.0 * wheel_mass * wheel_radius**2 %></iyy>
          <izz><%= 1.0/12.0*wheel_mass*(3.0*wheel_radius**2 + wheel_thickness**2) %></izz>
          <ixy>0</ixy><ixz>0</ixz><iyz>0</iyz>
        </inertia>
      </inertial>

      <visual name='vis_wheel'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>torus.obj</uri>
            <scale><%= wheel_radius %> <%= wheel_radius %> <%= wheel_radius %></scale>
          </mesh>
          <!--<cylinder>-->
            <!--<radius><%= wheel_radius %></radius>-->
            <!--<length><%= wheel_thickness %></length>-->
          <!--</cylinder>-->
        </geometry>
      </visual>
      <visual name='vis_wheel2'>
        <pose>0 0 0 <%= PI/2.0 %> 0 0</pose>
        <geometry>
          <cylinder>
            <radius><%= wheel_radius %></radius>
            <length><%= wheel_thickness %></length>
          </cylinder>
        </geometry>
      </visual>
      <collision name='col_wheel'>
        <pose>0 0 0 <%= PI/2.0 %> 0 0</pose>
        <geometry>
          <!--<mesh>-->
            <!--<uri>torus.obj</uri>-->
          <!--</mesh>-->
          <cylinder>
            <radius><%= wheel_radius %></radius>
            <length><%= wheel_thickness %></length>
          </cylinder>
        </geometry>
      </collision>

    </link>

    <link name='pole'>
      <gravity>true</gravity>
      <self_collide>0</self_collide>
      <pose>0 0 <%= pole_length/2.0 %> 0 0 0</pose>
      <inertial>
        <mass><%= pole_mass %></mass>
        <inertia>
          <ixx><%= 1.0/3.0*pole_mass*pole_length**2 %></ixx>
          <iyy><%= 1.0/3.0*pole_mass*pole_length**2 %></iyy>
          <izz>0</izz>
          <ixy>0</ixy><ixz>0</ixz><iyz>0</iyz>
        </inertia>
      </inertial>

      <visual name='vis_cylinder'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius><%= pole_radius %></radius>
            <length><%= pole_length %></length>
          </cylinder>
        </geometry>
      </visual>
      <collision name='col_cylinder'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius><%= pole_radius %></radius>
            <length><%= pole_length %></length>
          </cylinder>
        </geometry>
      </collision>
    </link>

    <link name='x_dummy'>
      <pose>0 0 0 0 0 0</pose>
      <inertial>
        <mass>1e-6</mass>
      </inertial>
    </link>

    <link name='z_dummy'>
      <pose>0 0 0 0 0 0</pose>
      <inertial>
        <mass>1e-6</mass>
      </inertial>
    </link>

    <joint name='z' type='prismatic'>
      <parent>world</parent>
      <child>z_dummy</child>
      <pose>0 0 0 0 0 0</pose>
      <axis>
        <xyz>0 0 1.0</xyz>
        <limit>
          <effort>0.0</effort>
        </limit>
      </axis>
    </joint>

    <joint name='x' type='prismatic'>
      <parent>z_dummy</parent>
      <child>x_dummy</child>
      <pose>0 0 0 0 0 0</pose>
      <axis>
        <xyz>1.0 0 0</xyz>
        <limit>
          <effort>0.0</effort>
        </limit>
      </axis>
    </joint>

    <joint name='theta' type='revolute'>
      <parent>x_dummy</parent>
      <child>pole</child>
      <pose>0 0 <%= -pole_length/2.0 %> 0 0 0</pose>
      <axis>
        <xyz>0 1.0 0</xyz>
        <limit>
          <effort>0.0</effort>
        </limit>
      </axis>
    </joint>

    <joint name='wheel_pole_joint' type='revolute'>
      <!--With respect to child frame-->
      <pose>0 0 0 0 0 0</pose>
      <parent>pole</parent>
      <child>wheel</child>
      <axis>
        <xyz>0 1.0 0</xyz>
        <!--<use_parent_model_frame>true</use_parent_model_frame>-->
      </axis>
    </joint>

  </model>
</sdf>
